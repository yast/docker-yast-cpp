#! /bin/bash

# This is a CI build script for running inside the Travis builds.
# It's designed for the YaST packages written in C++.

# exit on error immediately, print the executed commands
set -e -x

# Build the binary package locally, use plain "rpmbuild" to make it simple.
# "osc build" is too resource hungry (builds a complete chroot from scratch).
# Moreover it does not work in a Docker container (it fails when trying to mount
# /proc and /sys in the chroot).
if [ -f utils/make_package ]; then
  utils/make_package
elif [ -f Makefile.repo ]; then
  make -f Makefile.repo
  make package
elif [ -f Rakefile ]; then
  rake tarball > /dev/null 2>&1
else
  echo "ERROR: Missing Makefile.repo or Rakefile, cannot build the package"
  exit 1
fi

if [ -d package ]; then
  # run the osc source validator to check the .spec and .changes locally
  (cd package && /usr/lib/obs/service/source_validator)
fi

cp package/* /usr/src/packages/SOURCES/
# Build the binary package, if it fails try to build the package with ignored
# deps, maybe it can work anyway...
# (e.g. yast2-packager requires yast2_theme which is not needed in simple rpmbuild)
rpmbuild -bb package/*.spec || rpmbuild -bb --nodeps package/*.spec

# test the %pre/%post scripts by installing/updating/removing the built packages
# ignore the dependencies to make the test easier, as a smoke test it's good enough
rpm -iv --force --nodeps /usr/src/packages/RPMS/**/*.rpm
rpm -Uv --force --nodeps /usr/src/packages/RPMS/**/*.rpm
# get the plain package names and remove all packages at once
rpm -ev --nodeps `rpm -q --qf '%{NAME} ' -p /usr/src/packages/RPMS/**/*.rpm`
